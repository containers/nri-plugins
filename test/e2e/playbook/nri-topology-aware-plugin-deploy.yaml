---
- hosts: all
  become: no
  become_user: root
  vars:
    - cri_runtime: "{{ cri_runtime }}"
    - is_containerd: false
    - is_crio: false

  tasks:
    - set_fact:
        is_containerd: true
      when: cri_runtime == "containerd"
    - set_fact:
        is_crio: true
      when: cri_runtime == "crio"

    - name: create default nri configuration file
      become: yes
      copy:
        src: "{{ nri_resource_policy_src }}/test/e2e/files/nri-resource-policy.cfg"
        dest: /etc/nri-resource-policy/
        owner: root
        group: root
        mode: '0644'

    - name: copy nri-resource-policy plugins
      copy: src="{{ item }}" dest="." mode=0755
      with_items:
        - "{{ nri_resource_policy_src }}/build/bin/nri-resource-policy-topology-aware"

    - name: copy nri-resource-policy deployment yaml
      copy: src="{{ item }}" dest="." mode=0644
      with_items:
        - "{{ nri_resource_policy_src }}/build/images/nri-resource-policy-topology-aware-deployment-e2e.yaml"

    - name: copy nri-resource-policy deployment yaml to /etc/nri-resource-policy/nri-resource-policy-deployment.yaml
      become: yes
      copy: src="{{ nri_resource_policy_src }}/build/images/nri-resource-policy-topology-aware-deployment-e2e.yaml" dest="/etc/nri-resource-policy/nri-resource-policy-deployment.yaml" mode=0644
      register: result
      failed_when: result.state != "file"

    - name: create fallback config file for configmap tests
      become: yes
      shell: "{{ item }}"
      with_items:
        - sed 's/--force-config/--fallback-config/' /etc/nri-resource-policy/nri-resource-policy-deployment.yaml > /etc/nri-resource-policy/nri-resource-policy-deployment-fallback.yaml

    - name: fix the image name when using cri-o
      become: yes
      shell: >
        sed -i 's/image: nri-resource-policy-topology-aware:unknown/image: localhost\/nri-resource-policy-topology-aware:unknown/' /etc/nri-resource-policy/nri-resource-policy-deployment.yaml;
        sed -i 's/image: nri-resource-policy-topology-aware:unknown/image: localhost\/nri-resource-policy-topology-aware:unknown/' /etc/nri-resource-policy/nri-resource-policy-deployment-fallback.yaml
      when: is_crio

    - name: get latest nri-resource-policy deployment image name
      delegate_to: localhost
      shell: "ls -1t {{ nri_resource_policy_src }}/build/images/nri-resource-policy-topology-aware-image-*.tar"
      register: nri_resource_policy_images
      failed_when: nri_resource_policy_images.rc != 0

    - name: copy latest nri-resource-policy deployment image
      copy: src="{{ nri_resource_policy_images.stdout_lines[0] }}" dest="."

    - name: import nri plugin image when using containerd
      become: yes
      shell: "ctr -n k8s.io images import `basename {{ nri_resource_policy_images.stdout_lines[0] }}`"
      when: is_containerd

    - name: load nri plugin image when using cri-o
      become: yes
      shell: "{{ item }}"
      with_items:
        - "podman image load -i `basename {{ nri_resource_policy_images.stdout_lines[0] }}`"
        - "podman image scp localhost/nri-resource-policy-topology-aware:unknown vagrant@localhost::"
      when: is_crio
