//go:build !ignore_autogenerated

// Copyright The NRI Plugins Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package klogcontrol

import ()

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	if in.Add_dir_header != nil {
		in, out := &in.Add_dir_header, &out.Add_dir_header
		*out = new(bool)
		**out = **in
	}
	if in.Alsologtostderr != nil {
		in, out := &in.Alsologtostderr, &out.Alsologtostderr
		*out = new(bool)
		**out = **in
	}
	if in.Log_backtrace_at != nil {
		in, out := &in.Log_backtrace_at, &out.Log_backtrace_at
		*out = new(string)
		**out = **in
	}
	if in.Log_dir != nil {
		in, out := &in.Log_dir, &out.Log_dir
		*out = new(string)
		**out = **in
	}
	if in.Log_file != nil {
		in, out := &in.Log_file, &out.Log_file
		*out = new(string)
		**out = **in
	}
	if in.Log_file_max_size != nil {
		in, out := &in.Log_file_max_size, &out.Log_file_max_size
		*out = new(uint64)
		**out = **in
	}
	if in.Logtostderr != nil {
		in, out := &in.Logtostderr, &out.Logtostderr
		*out = new(bool)
		**out = **in
	}
	if in.One_output != nil {
		in, out := &in.One_output, &out.One_output
		*out = new(bool)
		**out = **in
	}
	if in.Skip_headers != nil {
		in, out := &in.Skip_headers, &out.Skip_headers
		*out = new(bool)
		**out = **in
	}
	if in.Skip_log_headers != nil {
		in, out := &in.Skip_log_headers, &out.Skip_log_headers
		*out = new(bool)
		**out = **in
	}
	if in.Stderrthreshold != nil {
		in, out := &in.Stderrthreshold, &out.Stderrthreshold
		*out = new(string)
		**out = **in
	}
	if in.V != nil {
		in, out := &in.V, &out.V
		*out = new(int)
		**out = **in
	}
	if in.Vmodule != nil {
		in, out := &in.Vmodule, &out.Vmodule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}
